# This docker-compose file is used with the end-to-end tests.

# NOTE: The tags in this file get updated automatically via
# the update_tag script, just like the main docker-compose.yml

version: "3.8"

services:
  msa_front:
    depends_on:
      - msa_api
      - msa_ui
      - camunda
      - msa_ai_ml
    image: ubiqube/msa2-front:ca406b019d4b23781aaf6fe9412fb2a80d65234e
    healthcheck:
      test: ["CMD-SHELL", "curl -k --fail https://localhost"]
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 514
        published: 514
        protocol: udp
        mode: host
      - target: 162
        published: 162
        protocol: udp
        mode: host
      - target: 69
        published: 69
        protocol: udp
        mode: host
      - "5200-5200:5200-5200/udp"
    #
    # uncomment this section when installing a custom certificate
    #
    # uncomment one of the 2 section below when installing a custom certificate
    # - Docker standard standalone installation
    #volumes:
    #    - "msa_front:/etc/nginx/ssl"
    # - Docker Swarm HA installation
    #volumes:
    #    - "/mnt/NASVolume/msa_front:/etc/nginx/ssl"

  camunda:
    depends_on:
      - db
    image: ubiqube/msa2-camunda:b839a640c1396f27a538c6e633d47ad93796a9e4
    environment:
      DB_DRIVER: org.postgresql.Driver
      DB_URL: 'jdbc:postgresql://db:5432/process-engine'
      DB_USERNAME: camunda
      DB_PASSWORD: camunda
      DB_VALIDATE_ON_BORROW: 'true'
      WAIT_FOR: 'db:5432'
      WAIT_FOR_TIMEOUT: 60

  db:
    image: ubiqube/msa2-db:41ebd8816dd8e117a8288f2f0a4a011a031af972
    command: postgres -c 'max_connections=800' -c "max_prepared_transactions=100"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      timeout: 60s
    environment:
      POSTGRES_PASSWORD: my_db_password
      POSTGRES_DB: POSTGRESQL
      CAMUNDA_PASSWORD: camunda
      CAMUNDA_DB: process-engine
      CAMUNDA_USER: camunda

  msa_api:
    depends_on:
      - db
    image: ubiqube/msa2-api:8d5bc8c344831a19eb2ad6ae49132e4c926d96c3
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8480"]
    environment:
      - ES_CREDENTIALS=c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc=
    ports:
      - "8480:8480"
      - "8787:8787"
    volumes:
      - "msa_dev:/opt/devops/"
      - "msa_entities:/opt/fmc_entities"
      - "msa_repository:/opt/fmc_repository"
      - "rrd_repository:/opt/rrd"
      - "msa_api_logs:/opt/wildfly/logs/processLog"
    networks:
      default:
        aliases:
          - "msa-api"

  msa_ui:
    depends_on:
      - msa_api
    image: ubiqube/msa2-ui:3a7ebdfc6aa83de9c5ce2a188e3b1c002a3c2e69
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080"]
    environment:
    - FEATURE_ADMIN=true
    - FEATURE_CONNECTION_STATUS=true
    - FEATURE_ALARMS=true
    - FEATURE_LICENCE=true
    - FEATURE_TOPOLOGY=true
    - FEATURE_MONITORING_PROFILES=true
    - FEATURE_SCHEDULE_WORKFLOWS=true
    - FEATURE_PROFILE_AUDIT_LOGS=true
    - FEATURE_PERMISSION_PROFILES=true
    - FEATURE_AI_ML=true
    - FEATURE_WORKFLOW_OWNER=false

  cloudclapp:
    depends_on:
      - msa_api
    image: ubiqube/cloudclapp:3a7ebdfc6aa83de9c5ce2a188e3b1c002a3c2e69
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080"]

  msa_es:
    healthcheck:
      test: ["CMD-SHELL", "test -f /home/install/init-done && curl -s -XGET -H 'Authorization: Basic c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc='  'http://localhost:9200/_cluster/health?pretty' | grep -q 'status.*green' || exit 1"]
    image: ubiqube/msa2-es:2d6359c08793c871a2ccc61367d090c5da86761b
    environment:
      - "discovery.type=single-node"
      - "script.painless.regex.enabled=true"
      - "bootstrap.memory_lock=true"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "ES_CREDENTIALS=c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc="
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - "msa_es:/usr/share/elasticsearch/data"

  msa_sms:
    depends_on:
      - db
      - msa_es
      - msa_dev
    healthcheck:
      test: ["CMD-SHELL", "/etc/init.d/ubi-sms status | grep -q 'service seems UP' || exit 1"]
    image: ubiqube/msa2-sms:8c7e45f449d7695508b4aebb860aca1433cce717
    environment:
      - ES_CREDENTIALS=c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc=
    volumes:
      - "msa_dev:/opt/devops/"
      - "msa_entities:/opt/fmc_entities"
      - "msa_repository:/opt/fmc_repository"
      - "msa_svn:/opt/svnroot"
      - "msa_bulkfiles:/opt/sms/spool/parser"

  msa_alarm:
    depends_on:
      - db
      - msa_es
      - msa_api
    healthcheck:
      test: ["CMD-SHELL", "/etc/init.d/ubi-alarm status | grep -q 'service seems UP' || exit 1"]
    image: ubiqube/msa2-alarm:bc4390ff9d1c802d483270a51fa72f491874297a
    environment:
      - ES_CREDENTIALS=c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc=

  msa_monitoring:
    depends_on:
      - db
      - msa_es
      - msa_dev
    healthcheck:
      test: ["CMD-SHELL", "/etc/init.d/ubi-poll status | grep -q 'service seems UP' || exit 1"]
    image: ubiqube/msa2-monitoring:4e6ef663e040933be108bc71627799134bda7d0b
    environment:
      - ES_CREDENTIALS=c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc=
    volumes:
      - "msa_dev:/opt/devops/"
      - "msa_entities:/opt/fmc_entities"
      - "msa_repository:/opt/fmc_repository"
      - "rrd_repository:/opt/rrd"
      - "msa_bulkfiles:/opt/sms/spool/parser"

  msa_bud:
    depends_on:
      - db
    image: ubiqube/msa2-bud:df7c38796ad9b3ecf3f247dcc8c6e10c1f85279a
    healthcheck:
      test: ["CMD-SHELL", "/etc/init.d/ubi-bud status | grep -q 'service seems UP' || exit 1"]

  msa_cerebro:
    image: ubiqube/msa2-cerebro:914750e000db1343d9972bfa6652da1efe4aa32f
    environment:
      AUTH_TYPE: basic
      BASIC_AUTH_USER: cerebro
      BASIC_AUTH_PWD: "N@X{M4tfw'5%)+35"
    entrypoint:
      - /opt/cerebro/bin/cerebro
      - -Dhosts.0.host=http://msa_es:9200
    depends_on:
      - msa_es
    ports:
      - "9000:9000"

  msa_kibana:
    image: ubiqube/msa2-kibana:49c1c422ad5559815d4f74568904a7214e788932
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_URL=http://msa_es:9200
      - ELASTICSEARCH_HOSTS=http://msa_es:9200
      - ES_CREDENTIALS=c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc=
    networks:
      default:
        aliases:
          - "msa-kibana"

  msa_ai_ml:
    image: ubiqube/msa2-ai-ml:63c7fab8c111b6cc85da049f45ebc6175a9b269a
    healthcheck:
      test: ["CMD-SHELL", "python /msa_proj/health_check.py"]
    ports:
      - "8000:8000"
    volumes:
      - "msa_ai_ml_db:/msa_proj/database"
    networks:
      default:
        aliases:
          - "msa-ai-ml"

  msa_linux:
    image: ubiqube/msa2-linuxme:b831acacdef579420ee1abf70ef66655d969fcbb
    cap_add:
      - sys_rawio
    devices:
      - "/dev/mem:/dev/mem"

  msa_dev:
    image: ubiqube/msa2-linuxdev:7a29b4818c6740ced2d0d7262a9cb86cf6fc457d
    depends_on:
      - msa_es
    volumes:
      - "msa_api:/opt/ubi-jentreprise/generated/conf"
      - "msa_dev:/opt/devops/"
      - "msa_entities:/opt/fmc_entities"
      - "msa_repository:/opt/fmc_repository"

volumes:
  msa_api:
  msa_config:
  msa_dev:
  msa_entities:
  msa_es:
  msa_repository:
  rrd_repository:
  msa_api_logs:
  msa_front:
  msa_svn:
  msa_ai_ml_db:
  msa_bulkfiles:

networks:
  default:
    driver_opts:
      encrypted: "true"
